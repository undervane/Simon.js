{
	"version": 3,
	"file": "../sass/main.css",
	"sources": [
		"../sass/main.scss",
		"../sass/helpers/_mixins.scss",
		"../sass/pages/_home.scss",
		"../sass/components/_checkmark.scss"
	],
	"sourcesContent": [
		"\r\n@import 'helpers/mixins.scss';\r\n@import 'pages/home.scss';\r\n@import 'components/checkmark.scss';",
		"\r\n$breakpoints: (\r\n    'small':  767px,\r\n    'medium': 992px,\r\n    'large':  1200px\r\n  ) !default;\r\n\r\n/// Mixin to manage responsive breakpoints\r\n/// @author Hugo Giraudel\r\n/// @param {String} $breakpoint - Breakpoint name\r\n/// @require $breakpoints\r\n@mixin respond-to($breakpoint) {\r\n\t// If the key exists in the map\r\n\t@if map-has-key($breakpoints, $breakpoint) {\r\n\t  // Prints a media query based on the value\r\n\t  @media (max-width: map-get($breakpoints, $breakpoint)) {\r\n\t\t@content;\r\n\t  }\r\n\t}\r\n   \r\n\t// If the key doesn't exist in the map\r\n\t@else {\r\n\t  @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\r\n\t\t  + \"Available breakpoints are: #{map-keys($breakpoints)}.\";\r\n\t}\r\n  }",
		"body{\r\n\r\n    margin: 0;\r\n\r\n}\r\n\r\ninput, button {\r\n    \r\n    &:focus {\r\n    \r\n    outline: none; \r\n\r\n    }\r\n\r\n}\r\n\r\n.container{\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n    width: 100vw;\r\n\r\n}\r\n\r\n.overlay{\r\n\r\n    width: 100vw;\r\n    height: 100vh;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: -1;\r\n\r\n}\r\n\r\n#background{\r\n\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: rgb(51, 45, 45);\r\n\r\n}\r\n\r\n.row{\r\n\r\n    display: block;\r\n    width: 100%;\r\n    font-size: 0px;\r\n}\r\n\r\n.full-box{\r\n\r\n    box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.199);\r\n    border-radius: 20px;\r\n\r\n    #count{\r\n\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        z-index: 9991;\r\n        margin: 0px;\r\n\r\n        color: white;\r\n        font-family: Roboto;\r\n\r\n        cursor: pointer;\r\n\r\n        user-select: none;\r\n        pointer-events:none;\r\n\r\n        text-align: center;\r\n\r\n\r\n    }\r\n\r\n    button{\r\n\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        z-index: 1000;\r\n\r\n        font-size: 25px;\r\n        border-radius: 40px;\r\n        height: 80px;\r\n        width: 80px;\r\n        border: none;\r\n        background-color: black;\r\n        color: white;\r\n\r\n        padding: 5px 6px 7px 5px;\r\n\r\n    }\r\n}\r\n\r\n.hide{\r\n\r\n    display: none;\r\n\r\n}\r\n\r\n.box{\r\n\r\n    display: inline-block;\r\n    width: 40vh;\r\n    height: 40vh;\r\n    cursor: pointer;\r\n\r\n}\r\n\r\n.listening{\r\n\r\n    &:active{\r\n\r\n        filter: brightness(150%);\r\n\r\n    }\r\n\r\n}\r\n\r\n.active{\r\n\r\n    filter: brightness(150%);\r\n\r\n}\r\n\r\n#red{\r\n\r\n    border-radius: 20px 0 0 0;\r\n    background-color: #be4335;\r\n\r\n    \r\n\r\n}\r\n\r\n#blue{\r\n\r\n    border-radius: 0 20px 0 0;\r\n    background-color: #2c78ac;\r\n\r\n}\r\n\r\n#green{\r\n\r\n    border-radius: 0 0 0 20px;\r\n    background-color: #239954;\r\n\r\n}\r\n\r\n#yellow{\r\n\r\n    border-radius: 0 0 20px 0;\r\n    background-color: #c2a813;\r\n\r\n}",
		"$brand-success: #f0f0f0;\r\n$loader-size: 100%;\r\n$check-height: $loader-size/2;\r\n$check-width: $check-height/2;\r\n$check-left: ($loader-size/6 + $loader-size/12);\r\n$check-thickness: 3px;\r\n$check-color: #5cb85c;\r\n\r\n.circle-loader {\r\n\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  border-left-color: white;\r\n  animation: loader-spin 1.2s infinite linear;\r\n  border-radius: 50%;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n}\r\n\r\n.load-complete {\r\n  -webkit-animation: none;\r\n  animation: none;\r\n  border-color: $check-color;\r\n  transition: border 500ms ease-out;\r\n}\r\n\r\n.checkmark {\r\n  display: none;\r\n  \r\n  &.draw:after {\r\n    animation-duration: 800ms;\r\n    animation-timing-function: ease;\r\n    animation-name: checkmark;\r\n    transform: scaleX(-1) rotate(135deg);\r\n  }\r\n  \r\n  &:after {\r\n    opacity: 1;\r\n    height: $check-height;\r\n    width: $check-width;\r\n    transform-origin: left top;\r\n    border-right: $check-thickness solid $check-color;\r\n    border-top: $check-thickness solid $check-color;\r\n    content: '';\r\n    left: $check-left;\r\n    top: $check-height;\r\n    position: absolute;\r\n  }\r\n}\r\n\r\n@keyframes loader-spin {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n@keyframes checkmark {\r\n  0% {\r\n    height: 0;\r\n    width: 0;\r\n    opacity: 1;\r\n  }\r\n  20% {\r\n    height: 0;\r\n    width: $check-width;\r\n    opacity: 1;\r\n  }\r\n  40% {\r\n    height: $check-height;\r\n    width: $check-width;\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    height: $check-height;\r\n    width: $check-width;\r\n    opacity: 1;\r\n  }\r\n}"
	],
	"mappings": "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",
	"names": []
}